(function(d){"function"===typeof define&&define.amd?define(["jquery"],d):d(jQuery)})(function(d){var l=d.fn.tree,k=function(a,b){this.$element=d(a);this.options=d.extend({},d.fn.tree.defaults,b);if(this.options.itemSelect)this.$element.on("click.fu.tree",".tree-item",d.proxy(function(a){this.selectItem(a.currentTarget)},this));this.$element.on("click.fu.tree",".tree-branch-name",d.proxy(function(a){this.toggleFolder(a.currentTarget)},this));this.options.folderSelect&&(this.$element.off("click.fu.tree",
".tree-branch-name"),this.$element.on("click.fu.tree",".icon-caret",d.proxy(function(a){this.toggleFolder(d(a.currentTarget).parent())},this)),this.$element.on("click.fu.tree",".tree-branch-name",d.proxy(function(a){this.selectFolder(d(a.currentTarget))},this)));this.render()};k.prototype={constructor:k,destroy:function(){this.$element.find("li:not([data-template])").remove();this.$element.remove();return this.$element[0].outerHTML},render:function(){this.populate(this.$element)},populate:function(a){var b=
this,c=a.hasClass("tree")?a:a.parent(),e=c.find(".tree-loader:eq(0)"),f=c.data();e.removeClass("hide");this.options.dataSource(f?f:{},function(f){e.addClass("hide");d.each(f.data,function(f,e){var g;"folder"===e.type?(g=b.$element.find("[data-template=treebranch]:eq(0)").clone().removeClass("hide").removeData("template"),g.data(e),g.find(".tree-branch-name > .tree-label").html(e.text||e.name)):"item"===e.type&&(g=b.$element.find("[data-template=treeitem]:eq(0)").clone().removeClass("hide").removeData("template"),
g.find(".tree-item-name > .tree-label").html(e.text||e.name),g.data(e));d.each(e.attr||e.dataAttributes||[],function(a,b){switch(a){case "cssClass":case "class":case "className":g.addClass(b);break;case "data-icon":g.find(".icon-item").removeClass().addClass("icon-item "+b);g.attr(a,b);break;case "id":g.attr(a,b);g.attr("aria-labelledby",b+"-label");g.find(".tree-branch-name > .tree-label").attr("id",b+"-label");break;default:g.attr(a,b)}});a.hasClass("tree-branch-header")?c.find(".tree-branch-children:eq(0)").append(g):
a.append(g)});b.$element.trigger("loaded.fu.tree",c)})},selectItem:function(a){if(this.options.itemSelect){var b=d(a);a=b.data();var c=this.$element.find(".tree-selected"),e=[],f=b.find(".icon-item");this.options.multiSelect?d.each(c,function(a,c){d(c)[0]!==b[0]&&e.push(d(c).data())}):c[0]!==b[0]&&(c.removeClass("tree-selected").find(".glyphicon").removeClass("glyphicon-ok").addClass("fueluxicon-bullet"),e.push(a));c="selected";b.hasClass("tree-selected")?(c="deselected",b.removeClass("tree-selected"),
(f.hasClass("glyphicon-ok")||f.hasClass("fueluxicon-bullet"))&&f.removeClass("glyphicon-ok").addClass("fueluxicon-bullet")):(b.addClass("tree-selected"),(f.hasClass("glyphicon-ok")||f.hasClass("fueluxicon-bullet"))&&f.removeClass("fueluxicon-bullet").addClass("glyphicon-ok"),this.options.multiSelect&&e.push(a));this.$element.trigger(c+".fu.tree",{target:a,selected:e});b.trigger("updated.fu.tree",{selected:e,item:b,eventType:c})}},openFolder:function(a,b){var c=d(a);b||!c.find(".glyphicon-folder-open").length||
this.options.ignoreRedundantOpens||this.closeFolder(a);var c=c.closest(".tree-branch"),e=c.find(".tree-branch-children"),f=e.eq(0);c.addClass("tree-open");c.attr("aria-expanded","true");f.removeClass("hide");c.find("> .tree-branch-header .icon-folder").eq(0).removeClass("glyphicon-folder-close").addClass("glyphicon-folder-open");e.children().length||this.populate(e);this.$element.trigger("opened.fu.tree",c.data())},closeFolder:function(a){a=d(a).closest(".tree-branch");var b=a.find(".tree-branch-children").eq(0);
a.removeClass("tree-open");a.attr("aria-expanded","false");b.addClass("hide");a.find("> .tree-branch-header .icon-folder").eq(0).removeClass("glyphicon-folder-open").addClass("glyphicon-folder-close");this.options.cacheItems||b.empty();this.$element.trigger("closed.fu.tree",a.data())},toggleFolder:function(a){var b=d(a);b.find(".glyphicon-folder-close").length?this.openFolder(a):b.find(".glyphicon-folder-open").length&&this.closeFolder(a)},selectFolder:function(a){if(this.options.folderSelect){var b=
d(a);a=b.closest(".tree-branch");var c=this.$element.find(".tree-branch.tree-selected"),e=a.data(),f=[],h="selected";a.hasClass("tree-selected")?(h="deselected",a.removeClass("tree-selected")):a.addClass("tree-selected");this.options.multiSelect?(c=this.$element.find(".tree-branch.tree-selected"),d.each(c,function(a,c){d(c)[0]!==b[0]&&f.push(d(c).data())})):c[0]!==b[0]&&(c.removeClass("tree-selected"),f.push(e));this.$element.trigger(h+".fu.tree",{target:e,selected:f});b.trigger("updated.fu.tree",
{selected:f,item:b,eventType:h})}},selectedItems:function(){var a=this.$element.find(".tree-selected"),b=[];d.each(a,function(a,e){b.push(d(e).data())});return b},collapse:function(){var a=this,b=[];a.$element.on("closed.fu.tree",function e(d,h){b.push(h);0===a.$element.find(".tree-branch.tree-open:not('.hide')").length&&(a.$element.trigger("closedAll.fu.tree",{tree:a.$element,reportedClosed:b}),a.$element.off("loaded.fu.tree",a.$element,e))});a.$element.find(".tree-branch.tree-open:not('.hide')").each(function(){a.closeFolder(this)})},
discloseVisible:function(){var a=this,b=a.$element.find(".tree-branch:not('.tree-open, .hide')"),c=[];a.$element.on("loaded.fu.tree",function f(d,k){c.push(k);c.length===b.length&&(a.$element.trigger("disclosedVisible.fu.tree",{tree:a.$element,reportedOpened:c}),a.$element.off("loaded.fu.tree",a.$element,f))});a.$element.find(".tree-branch:not('.tree-open, .hide')").each(function(){a.openFolder(d(this).find(".tree-branch-header"),!0)})},discloseAll:function(){var a=this;"undefined"===typeof a.$element.data("disclosures")&&
a.$element.data("disclosures",0);var b=1<=a.options.disclosuresUpperLimit&&a.$element.data("disclosures")>=a.options.disclosuresUpperLimit;if(0!==a.$element.find(".tree-branch:not('.tree-open, .hide')").length){if(b&&(a.$element.trigger("exceededDisclosuresLimit.fu.tree",{tree:a.$element,disclosures:a.$element.data("disclosures")}),!a.$element.data("ignore-disclosures-limit")))return;a.$element.data("disclosures",a.$element.data("disclosures")+1);a.$element.one("disclosedVisible.fu.tree",function(){a.discloseAll()});
a.discloseVisible()}else if(a.$element.trigger("disclosedAll.fu.tree",{tree:a.$element,disclosures:a.$element.data("disclosures")}),!a.options.cacheItems)a.$element.one("closeAll.fu.tree",function(){a.$element.data("disclosures",0)})}};k.prototype.closeAll=k.prototype.collapse;d.fn.tree=function(a){var b=Array.prototype.slice.call(arguments,1),c,e=this.each(function(){var e=d(this),h=e.data("fu.tree"),l="object"===typeof a&&a;h||e.data("fu.tree",h=new k(this,l));"string"===typeof a&&(c=h[a].apply(h,
b))});return void 0===c?e:c};d.fn.tree.defaults={dataSource:function(a,b){},multiSelect:!1,cacheItems:!0,folderSelect:!0,itemSelect:!0,ignoreRedundantOpens:!1,disclosuresUpperLimit:0};d.fn.tree.Constructor=k;d.fn.tree.noConflict=function(){d.fn.tree=l;return this}});